version: '3.9'
services:
  serverpg:
    image: postgres:16.1
    container_name: serverpg
    build:
      context: ./server
    env_file:
      - ./server/.env
    environment:
      - POSTGRES_DB=${SERVER_DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: ['5432:5432']
    volumes:
      - ./server-postgres-data:/var/lib/postgresql/data
  server:
    build: ./server
    container_name: server
    restart: always
    env_file:
      - ./server/.env
    ports:
      - 3000:3000
    depends_on:
      - serverpg
      - kafka
  # notificationpg:
  #   image: postgres:16.1
  #   container_name: notificationpg
  #   build:
  #     context: ./notification
  #   env_file:
  #     - ./notification/.env
  #   environment:
  #     - POSTGRES_DB=${NOTIFICATION_DB_NAME}
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #   ports: ['5433:5432']
  #   volumes:
  #     - ./notification-postgres-data:/var/lib/postgresql/ndata
  # notification:
  #   build: ./notification
  #   container_name: notification
  #   restart: always
  #   env_file:
  #     - ./notification/.env
  #   ports:
  #     - 3001:3000
  #   depends_on:
  #     - notificationpg
  #     - kafka
  zookeeper:
    image: 'wurstmeister/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'wurstmeister/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
