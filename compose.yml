version: '3.9'
services:
  serverpg:
    image: postgres:16.1
    container_name: serverpg
    environment:
      - POSTGRES_DB=${SERVER_DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: ['5432:5432']
    volumes:
      - ./server-postgres-data:/var/lib/postgresql/data
  server:
    image: server
    container_name: server
    restart: always
    env_file:
      - ./server/.env
    ports:
      - 3000:3000
    depends_on:
      - serverpg
      - kafka
  notificationpg:
    image: postgres:16.1
    container_name: notificationpg
    build:
      context: ./notification
    env_file:
      - ./notification/.env
    environment:
      - POSTGRES_DB=${NOTIFICATION_DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: ['5433:5432']
    volumes:
      - ./notification-postgres-data:/var/lib/postgresql/ndata
  notification:
    image: notification
    container_name: notification
    restart: always
    env_file:
      - ./notification/.env
    ports:
      - 3001:3000
    depends_on:
      - notificationpg
      - kafka
  customers:
    image: customers
    container_name: customers
    restart: always
    env_file:
      - ./customers/.env
    ports:
      - 3002:3000
    depends_on:
      - customerspg
      - kafka
  customerspg:
    image: postgres:16.1
    container_name: customerspg
    env_file:
      - ./customers/.env
    environment:
      - POSTGRES_DB=${CUSTOMERS_DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: ['5434:5432']
    volumes:
      - ./customers-postgres-data:/var/lib/postgresql/data
  orchestrator:
    image: orchestrator
    container_name: orchestrator
    restart: always
    env_file:
      - ./orchestrator/.env
    ports:
      - 3005:3000
    depends_on:
      - server
      - kafka
  zookeeper:
    image: 'wurstmeister/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'wurstmeister/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9094,OUTSIDE://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9094,OUTSIDE://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
  prometheus:
    image: prom/prometheus
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
